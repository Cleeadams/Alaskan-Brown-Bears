lines(temp,f,lwd=5,col='darkorange')
sigma <- 2.23
mu <- 12.5
mu <- 14.3
f <- 1 / (sigma * sqrt(2*pi)) *
exp(-.5 * ( (temp - mu) / sigma )^2)
plot(temp,f,
pch=19,
cex=.7,
ylab='f(x)',
xlab='Temperature (celsius)',
main='Normal PDF of Salmon Migration',
cex.lab=1.5,
cex.main=2)
grid(NULL,NULL,col='lightgrey',lty=6)
lines(temp,f,lwd=5,col='darkorange')
mu <- 17.3
f <- 1 / (sigma * sqrt(2*pi)) *
exp(-.5 * ( (temp - mu) / sigma )^2)
plot(temp,f,
pch=19,
cex=.7,
ylab='f(x)',
xlab='Temperature (celsius)',
main='Normal PDF of Salmon Migration',
cex.lab=1.5,
cex.main=2)
grid(NULL,NULL,col='lightgrey',lty=6)
lines(temp,f,lwd=5,col='darkorange')
x <- 23
mu <- 17.3
sigma <- (x-mu)/3
f <- 1 / (sigma * sqrt(2*pi)) *
exp(-.5 * ( (temp - mu) / sigma )^2)
plot(temp,f,
pch=19,
cex=.7,
ylab='f(x)',
xlab='Temperature (celsius)',
main='Normal PDF of Salmon Migration',
cex.lab=1.5,
cex.main=2)
grid(NULL,NULL,col='lightgrey',lty=6)
lines(temp,f,lwd=5,col='darkorange')
sigma
f <- 1 / (sigma * sqrt(2*pi)) *
exp(-.5 * ( (temp - mu) / sigma )^2)
plot(temp,f,
pch=19,
cex=.7,
ylab='f(x)',
xlab='Temperature (celsius)',
main='Normal PDF of Salmon Migration',
cex.lab=1.5,
cex.main=2)
grid(NULL,NULL,col='lightgrey',lty=6)
lines(temp,f,lwd=5,col='darkorange')
x <- 20
mu <- 17.3
sigma <- (x-mu)/3
sigma
f <- 1 / (sigma * sqrt(2*pi)) *
exp(-.5 * ( (temp - mu) / sigma )^2)
plot(temp,f,
pch=19,
cex=.7,
ylab='f(x)',
xlab='Temperature (celsius)',
main='Normal PDF of Salmon Migration',
cex.lab=1.5,
cex.main=2)
grid(NULL,NULL,col='lightgrey',lty=6)
lines(temp,f,lwd=5,col='darkorange')
rm(list = ls())
temp <- seq(-5,30,.1)
crit <- 20
mu <- 17.3
sigma <- (crit-mu)/3
sigma
f <- 1 / (sigma * sqrt(2*pi)) *
exp(-.5 * ( (temp - mu) / sigma )^2)
plot(temp,f,
pch=19,
cex=.7,
ylab='f(x)',
xlab='Temperature (celsius)',
main='Normal PDF of Salmon Migration',
cex.lab=1.5,
cex.main=2)
grid(NULL,NULL,col='lightgrey',lty=6)
lines(temp,f,lwd=5,col='darkorange')
mu <- 14.3
sigma <- (crit-mu)/3
sigma
f <- 1 / (sigma * sqrt(2*pi)) *
exp(-.5 * ( (temp - mu) / sigma )^2)
plot(temp,f,
pch=19,
cex=.7,
ylab='f(x)',
xlab='Temperature (celsius)',
main='Normal PDF of Salmon Migration',
cex.lab=1.5,
cex.main=2)
grid(NULL,NULL,col='lightgrey',lty=6)
lines(temp,f,lwd=5,col='darkorange')
crit <- 24.4
mu <- 14.3
sigma <- (crit-mu)/3
sigma
f <- 1 / (sigma * sqrt(2*pi)) *
exp(-.5 * ( (temp - mu) / sigma )^2)
plot(temp,f,
pch=19,
cex=.7,
ylab='f(x)',
xlab='Temperature (celsius)',
main='Normal PDF of Salmon Migration',
cex.lab=1.5,
cex.main=2)
grid(NULL,NULL,col='lightgrey',lty=6)
lines(temp,f,lwd=5,col='darkorange')
library(openxlsx)
library(dplyr)
library(tidyr)
library(qpcR)
setwd('C:/Users/Connor/OneDrive/Documents/Thesis/Salmon Escapement/Data')
setwd('C:/Users/Connor/OneDrive/Desktop/GitHub/Alaskan-Brown-Bears/R/Salmon Escapement/Data')
tab1 <- read.xlsx('2017.xlsx')
tab2 <- read.xlsx('2018.xlsx')
tab3 <- read.xlsx('2019.xlsx')
tab4 <- read.xlsx('2020.xlsx')
tab5 <- read.xlsx('2021.xlsx')
head(tab1)
tab <- list(tab1,tab2,tab3,tab4,tab5)
sumdf <- c()
p <- 1
for (i in tab) {
df <- data.frame(matrix(nrow=dim(i)[1], ncol=dim(i)[2]))
df[] <- data.frame(lapply(i, as.integer))
df[is.na(df)] <- 0
sumdf[p] <- sum(df[,c(seq(2,18,2))])
p = p+1
}
sumdf
rm(list = ls())
temp <- seq(-5,30,.1)
crit <- 24.4
mu <- 12.5
sigma <- (crit-mu)/3
sigma
f <- 1 / (sigma * sqrt(2*pi)) *
exp(-.5 * ( (temp - mu) / sigma )^2)
plot(temp,f,
pch=19,
cex=.7,
ylab='f(x)',
xlab='Temperature (celsius)',
main='Normal PDF of Salmon Migration',
cex.lab=1.5,
cex.main=2)
grid(NULL,NULL,col='lightgrey',lty=6)
lines(temp,f,lwd=5,col='darkorange')
tab1 <- read.xlsx('2017.xlsx')
tab2 <- read.xlsx('2018.xlsx')
tab3 <- read.xlsx('2019.xlsx')
tab4 <- read.xlsx('2020.xlsx')
tab5 <- read.xlsx('2021.xlsx')
tab <- list(tab1,tab2,tab3,tab4,tab5)
setwd('C:/Users/Connor/OneDrive/Desktop/GitHub/Alaskan-Brown-Bears/R/Salmon Escapement/Data')
tab1 <- read.xlsx('2017.xlsx')
tab2 <- read.xlsx('2018.xlsx')
tab3 <- read.xlsx('2019.xlsx')
tab4 <- read.xlsx('2020.xlsx')
tab5 <- read.xlsx('2021.xlsx')
tab <- list(tab1,tab2,tab3,tab4,tab5)
tab1 <- read.xlsx('2017.xlsx')
tab <- list(tab1,tab2,tab3,tab4,tab5)
sumdf <- c()
p <- 1
for (i in tab) {
df <- data.frame(matrix(nrow=dim(i)[1], ncol=dim(i)[2]))
df[] <- data.frame(lapply(i, as.integer))
df[is.na(df)] <- 0
sumdf[p] <- sum(df[,c(seq(2,18,2))])
p = p+1
}
sumdf
temps <- c(8.9, 9.5, 10.8, 9.1, 7.8)
temps
x <- 10.8
z <- (x-mu)/sigma
z
x <- 9.1
z <- (x-mu)/sigma
z
x <- 98.9
x <- 8.9
z <- (x-mu)/sigma
z
x <- 9.5
z <- (x-mu)/sigma
z
sigma
crit <- 20.43
mu <- 14.3
sigma <- (crit-mu)/1.28
sigma
f <- 1 / (sigma * sqrt(2*pi)) *
exp(-.5 * ( (temp - mu) / sigma )^2)
plot(temp,f,
pch=19,
cex=.7,
ylab='f(x)',
xlab='Temperature (celsius)',
main='Normal PDF of Salmon Migration',
cex.lab=1.5,
cex.main=2)
grid(NULL,NULL,col='lightgrey',lty=6)
lines(temp,f,lwd=5,col='darkorange')
x <- 9.5
z <- (x-mu)/sigma
z
temp <- seq(-5,30,.1)
crit <- 20.43
mu <- 14.3
sigma <- (crit-mu)/.52
sigma
f <- 1 / (sigma * sqrt(2*pi)) *
exp(-.5 * ( (temp - mu) / sigma )^2)
plot(temp,f,
pch=19,
cex=.7,
ylab='f(x)',
xlab='Temperature (celsius)',
main='Normal PDF of Salmon Migration',
cex.lab=1.5,
cex.main=2)
grid(NULL,NULL,col='lightgrey',lty=6)
lines(temp,f,lwd=5,col='darkorange')
x <- 9.5
z <- (x-mu)/sigma
z
x <- 10.8
z <- (x-mu)/sigma
z
x <- 9.1
z <- (x-mu)/sigma
z
temps
sumdf
x <- 7.8
z <- (x-mu)/sigma
z
temp <- seq(-7,35,.1)
crit <- 20.43
mu <- 14.3
sigma <- (crit-mu)/.52
sigma
f <- 1 / (sigma * sqrt(2*pi)) *
exp(-.5 * ( (temp - mu) / sigma )^2)
plot(temp,f,
pch=19,
cex=.7,
ylab='f(x)',
xlab='Temperature (celsius)',
main='Normal PDF of Salmon Migration',
cex.lab=1.5,
cex.main=2)
grid(NULL,NULL,col='lightgrey',lty=6)
lines(temp,f,lwd=5,col='darkorange')
temp <- seq(-7,37,.1)
crit <- 20.43
mu <- 14.3
sigma <- (crit-mu)/.52
sigma
f <- 1 / (sigma * sqrt(2*pi)) *
exp(-.5 * ( (temp - mu) / sigma )^2)
plot(temp,f,
pch=19,
cex=.7,
ylab='f(x)',
xlab='Temperature (celsius)',
main='Normal PDF of Salmon Migration',
cex.lab=1.5,
cex.main=2)
grid(NULL,NULL,col='lightgrey',lty=6)
lines(temp,f,lwd=5,col='darkorange')
x <- 9.2
z <- (x-mu)/sigma
z
x <- 8.9
z <- (x-mu)/sigma
z
x <- 9.5
z <- (x-mu)/sigma
z
x <- 10.8
z <- (x-mu)/sigma
z
x <- 7.8
z <- (x-mu)/sigma
z
x <- 10.2
z <- (x-mu)/sigma
z
x <- 8.9
z <- (x-mu)/sigma
z
x <- 10.8
z <- (x-mu)/sigma
z
x <- 9.1
z <- (x-mu)/sigma
z
x <- 7.8
z <- (x-mu)/sigma
z
plot(sumdf)
points(c(1,2,3,4,5),c(14.5,15.26,18.9,20.3,19.2),pch=19)
plot(avg.monthly.tab$year,avg.monthly.tab$SST,
ylab=TeX(r'(Temeperature ( $\degree$ C))'),
xlab='Time (yrs)',
main=substitute(paste('Annual Water Temperature for ',
a),
list(a=site.name[r]))
)
grid(NULL,NULL,col='lightgrey',lty=6)
points(avg.monthly.tab$year,avg.monthly.tab$SST,
pch=19,
cex=.7,
col=4)
abline(slr,lwd=2,col='darkorange')
for (i in site) {
r <- which(site==i,arr.ind = TRUE)
avg.monthly.tab<- aggregate(SST[month>=6 & month<=9 & year>=1950 & `site #` == i]~
year[month>=6 & month<=9 & year>=1950 & `site #`==i],
data=df,FUN=mean)
colnames(avg.monthly.tab) <- c('year','SST')
slr <- lm(avg.monthly.tab$SST~avg.monthly.tab$year)
B[r,1] <- slr$coef['avg.monthly.tab$year']
A[r,1] <- slr$coef['(Intercept)']
plot(avg.monthly.tab$year,avg.monthly.tab$SST,
ylab=TeX(r'(Temeperature ( $\degree$ C))'),
xlab='Time (yrs)',
main=substitute(paste('Annual Water Temperature for ',
a),
list(a=site.name[r]))
)
grid(NULL,NULL,col='lightgrey',lty=6)
points(avg.monthly.tab$year,avg.monthly.tab$SST,
pch=19,
cex=.7,
col=4)
abline(slr,lwd=2,col='darkorange')
}
glog <- median(B[1:nrow(B),]); glog
goog <- mean(B[1:nrow(B),]); goog
A.avg <- mean(A[1:nrow(A),]); A.avg
# clear variable
rm(list=ls())
# Libraries
library(zoo)
library(latex2exp)
# Directory
setwd("C:/Users/conno/OneDrive - Cal Poly Pomona/Thesis Project/Data")
# Load data frames
tab1 <- read.delim("USGS River Temp/Battle")
tab2 <- read.delim("USGS River Temp/Bradley")
tab3 <- read.delim("USGS River Temp/Cooper")
tab4 <- read.delim("USGS River Temp/Iliamna")
tab5 <- read.delim("USGS River Temp/Kenai R - Cooper")
tab6 <- read.delim("USGS River Temp/Kenai R - Soldotna")
tab7 <- read.delim("USGS River Temp/Koktuli")
tab8 <- read.delim("USGS River Temp/Kokwok")
tab9 <- read.delim("USGS River Temp/Kroto Creek")
tab10 <- read.delim("USGS River Temp/Matanuska")
tab11 <- read.delim("USGS River Temp/Moose")
tab12 <- read.delim("USGS River Temp/Nuyakuk")
tab13 <- read.delim("USGS River Temp/Palmer")
tab14 <- read.delim("USGS River Temp/Red Cloud")
tab15 <- read.delim("USGS River Temp/Russell")
tab16 <- read.delim("USGS River Temp/Ship")
tab17 <- read.delim("USGS River Temp/Susitna")
tab18 <- read.delim("USGS River Temp/talkeetna")
tab19 <- read.delim("USGS River Temp/Terror")
tab20 <- read.delim("USGS River Temp/Willow")
tab21 <- read.delim("USGS River Temp/Wolverine")
tab22 <- read.delim("USGS River Temp/Taiya")
tab23 <- read.delim("USGS River Temp/Indian R")
tab24 <- read.delim("Usgs River Temp/Staney")
# Remove first row of each data frame
tab1 <- tab1[-c(1), ,drop=FALSE]
tab2 <- tab2[-c(1), ,drop=FALSE]
tab3 <- tab3[-c(1), ,drop=FALSE]
tab4 <- tab4[-c(1), ,drop=FALSE]
tab5 <- tab5[-c(1), ,drop=FALSE]
tab6 <- tab6[-c(1), ,drop=FALSE]
tab7 <- tab7[-c(1), ,drop=FALSE]
tab8 <- tab8[-c(1), ,drop=FALSE]
tab9 <- tab9[-c(1), ,drop=FALSE]
tab10 <- tab10[-c(1), ,drop=FALSE]
tab11 <- tab11[-c(1), ,drop=FALSE]
tab12 <- tab12[-c(1), ,drop=FALSE]
tab13 <- tab13[-c(1), ,drop=FALSE]
tab14 <- tab14[-c(1), ,drop=FALSE]
tab15 <- tab15[-c(1), ,drop=FALSE]
tab16 <- tab16[-c(1), ,drop=FALSE]
tab17 <- tab17[-c(1), ,drop=FALSE]
tab18 <- tab18[-c(1), ,drop=FALSE]
tab19 <- tab19[-c(1), ,drop=FALSE]
tab20 <- tab20[-c(1), ,drop=FALSE]
tab21 <- tab21[-c(1), ,drop=FALSE]
tab22 <- tab22[-c(1), ,drop=FALSE]
tab23 <- tab23[-c(1), ,drop=FALSE]
tab24 <- tab24[-c(1), ,drop=FALSE]
# Adjust duration of data because of gaps in years
tab24 <- tab24[which(tab24$year_nu<2020 & tab24$year_nu>=1998),]
tab5 <- tab5[which(tab5$year_nu>=2005),]
# Combine all data frames into a single data frame
tab <- rbind(tab3,tab5,tab15,tab19,tab24)
# List of site number
site <- as.numeric(as.matrix(unique(tab$site_no),ncol=1))
# Reorganize data frame
df <- data.frame(tab$year_nu,tab$month_nu,tab$mean_va,tab$site_no)
colnames(df) <- c('year','month','SST','site #')
# Change character variable to numeric
df$year <- as.numeric(df$year)
df$month <- as.numeric(df$month)
df$SST <- as.numeric(df$SST)
df$`site #` <- as.numeric(df$`site #`)
df$date <- as.yearmon(df$year+df$month)
# Setting up plot frame
par(mfrow=c(1,1))
plot(df$date,df$SST)
# Label the sites by name of location
site.name <- c('Cooper Creek', 'Kenai River', 'Russell Creek',
'Terror River', 'Staney Creek')
B <- data.frame(1:length(site))
A <- data.frame(1:length(site))
for (i in site) {
r <- which(site==i,arr.ind = TRUE)
avg.monthly.tab<- aggregate(SST[month>=6 & month<=9 & year>=1950 & `site #` == i]~
year[month>=6 & month<=9 & year>=1950 & `site #`==i],
data=df,FUN=mean)
colnames(avg.monthly.tab) <- c('year','SST')
slr <- lm(avg.monthly.tab$SST~avg.monthly.tab$year)
B[r,1] <- slr$coef['avg.monthly.tab$year']
A[r,1] <- slr$coef['(Intercept)']
plot(avg.monthly.tab$year,avg.monthly.tab$SST,
ylab=TeX(r'(Temeperature ( $\degree$ C))'),
xlab='Time (yrs)',
main=substitute(paste('Annual Water Temperature for ',
a),
list(a=site.name[r]))
)
grid(NULL,NULL,col='lightgrey',lty=6)
points(avg.monthly.tab$year,avg.monthly.tab$SST,
pch=19,
cex=.7,
col=4)
abline(slr,lwd=2,col='darkorange')
}
glog <- median(B[1:nrow(B),]); glog
goog <- mean(B[1:nrow(B),]); goog
A.avg <- mean(A[1:nrow(A),]); A.avg
# Average of all the SST for each month
avg.monthly<- aggregate(SST[month>=6 & month<=9 & year>=1950]~
year[month>=6 & month<=9 & year>=1950],
data=df,FUN=mean)
colnames(avg.monthly) <- c('year','SST')
# Attach data frame for ease of use
attach(avg.monthly)
# Focus on spawning months
mon.begin <- 7
mon.end <- 9
# Plot data
slr <- lm(SST~year)
plot(year,SST,ylab=TeX(r'(Temperature ( $\degree$ C))'),
xlab='Time (Yrs)',
main='Average Annual Water Temperatures')
grid(NULL,NULL,col='lightgrey',lty=6)
points(year,SST,pch=19,cex=.7,col=4)
abline(slr,lwd=2,col='darkorange')
B_T <- slr$coef['year']; B_T
A_T <- slr$coef['(Intercept)']; A_T
timevalues <- seq(1980,2040,.1)
lines(timevalues,goog*timevalues+A.avg,lwd=2,col='green')
legend(1987,10.6,legend=c('Avg. of Data','Avg. of Trends'),
col=c('darkorange','green'),
lty=1,
cex=.8
)
# dynamic harmonic regression - fable library
goog
x <- seq(1988,2021,1)
y.sin <- 10^(-39.45)*exp(.045*x)*sin(10^(-4)*x^2-31)+B_T*x+A_T
lines(x,y.sin,
col='red',
lwd=2
)
resid.sin <- y.sin-SST
sqrt(mean(resid.sin^2))
sqrt(mean(resid(slr)^2))
plot(x,resid.sin)
plot(x,resid(slr))
# plr
plot(c(1990:2040),seq(7,10,.06))
plr <- lm(SST~poly(year,degree=2,raw=TRUE))
timevalues <- seq(1980,2040,.1)
plr.sst <- predict(plr,newdata=data.frame(year=timevalues))
lines(timevalues,15-plr.sst)
